import { MigrationInterface, QueryRunner } from "typeorm";

export class ChangeInAirplaneEntityyyy1759467452772 implements MigrationInterface {
    name = 'ChangeInAirplaneEntityyyy1759467452772'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE \`payments\` DROP FOREIGN KEY \`FK_e86edf76dc2424f123b9023a2b2\``);
        await queryRunner.query(`ALTER TABLE \`tickets\` DROP FOREIGN KEY \`FK_cc20985f14524969dddd128efd5\``);
        await queryRunner.query(`ALTER TABLE \`bookings\` DROP FOREIGN KEY \`FK_6136a19aecad762acef1a49b083\``);
        await queryRunner.query(`ALTER TABLE \`bookings\` DROP FOREIGN KEY \`FK_64cd97487c5c42806458ab5520c\``);
        await queryRunner.query(`ALTER TABLE \`flights\` DROP FOREIGN KEY \`FK_10ec4f2cf1e23de40b1de9be5ec\``);
        await queryRunner.query(`ALTER TABLE \`flights\` DROP FOREIGN KEY \`FK_699cbb1ea33186f51a3fb73bdd4\``);
        await queryRunner.query(`ALTER TABLE \`flights\` DROP FOREIGN KEY \`FK_7ce4f1631dfb4a6137bbb87654d\``);
        await queryRunner.query(`DROP INDEX \`code\` ON \`airports\``);
        await queryRunner.query(`DROP INDEX \`IDX_06be6c7681ff18455fd7fd7c45\` ON \`airports\``);
        await queryRunner.query(`DROP INDEX \`booking_id\` ON \`payments\``);
        await queryRunner.query(`DROP INDEX \`ticket_number\` ON \`tickets\``);
        await queryRunner.query(`DROP INDEX \`IDX_8d7b9a157280caf57aa0282e72\` ON \`tickets\``);
        await queryRunner.query(`DROP INDEX \`booking_id\` ON \`tickets\``);
        await queryRunner.query(`DROP INDEX \`flight_id\` ON \`bookings\``);
        await queryRunner.query(`DROP INDEX \`user_id\` ON \`bookings\``);
        await queryRunner.query(`DROP INDEX \`arrival_airport_id\` ON \`flights\``);
        await queryRunner.query(`DROP INDEX \`departure_airport_id\` ON \`flights\``);
        await queryRunner.query(`DROP INDEX \`airplane_id\` ON \`flights\``);
        await queryRunner.query(`ALTER TABLE \`payments\` CHANGE \`id\` \`id\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`payments\` DROP PRIMARY KEY`);
        await queryRunner.query(`ALTER TABLE \`payments\` DROP COLUMN \`id\``);
        await queryRunner.query(`ALTER TABLE \`payments\` DROP COLUMN \`status\``);
        await queryRunner.query(`ALTER TABLE \`payments\` DROP COLUMN \`created_at\``);
        await queryRunner.query(`ALTER TABLE \`tickets\` CHANGE \`id\` \`id\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`tickets\` DROP PRIMARY KEY`);
        await queryRunner.query(`ALTER TABLE \`tickets\` DROP COLUMN \`id\``);
        await queryRunner.query(`ALTER TABLE \`tickets\` DROP COLUMN \`ticket_number\``);
        await queryRunner.query(`ALTER TABLE \`tickets\` DROP COLUMN \`issued_at\``);
        await queryRunner.query(`ALTER TABLE \`bookings\` DROP COLUMN \`booking_status\``);
        await queryRunner.query(`ALTER TABLE \`bookings\` DROP COLUMN \`booking_date\``);
        await queryRunner.query(`ALTER TABLE \`payments\` ADD \`payment_id\` int NOT NULL PRIMARY KEY AUTO_INCREMENT`);
        await queryRunner.query(`ALTER TABLE \`payments\` ADD \`createdAt\` datetime NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`tickets\` ADD \`ticketId\` int NOT NULL PRIMARY KEY AUTO_INCREMENT`);
        await queryRunner.query(`ALTER TABLE \`tickets\` ADD \`issuedAt\` datetime NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`airplanes\` DROP COLUMN \`model\``);
        await queryRunner.query(`ALTER TABLE \`airplanes\` ADD \`model\` varchar(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`airplanes\` DROP COLUMN \`capacity\``);
        await queryRunner.query(`ALTER TABLE \`airplanes\` ADD \`capacity\` varchar(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`airplanes\` DROP COLUMN \`manufacturer\``);
        await queryRunner.query(`ALTER TABLE \`airplanes\` ADD \`manufacturer\` varchar(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`airports\` DROP COLUMN \`name\``);
        await queryRunner.query(`ALTER TABLE \`airports\` ADD \`name\` varchar(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`airports\` DROP COLUMN \`city\``);
        await queryRunner.query(`ALTER TABLE \`airports\` ADD \`city\` varchar(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`airports\` DROP COLUMN \`country\``);
        await queryRunner.query(`ALTER TABLE \`airports\` ADD \`country\` varchar(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`airports\` DROP COLUMN \`code\``);
        await queryRunner.query(`ALTER TABLE \`airports\` ADD \`code\` varchar(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`payments\` DROP COLUMN \`amount\``);
        await queryRunner.query(`ALTER TABLE \`payments\` ADD \`amount\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`payments\` DROP COLUMN \`payment_method\``);
        await queryRunner.query(`ALTER TABLE \`payments\` ADD \`payment_method\` varchar(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`payments\` CHANGE \`booking_id\` \`booking_id\` int NULL`);
        await queryRunner.query(`ALTER TABLE \`payments\` ADD UNIQUE INDEX \`IDX_e86edf76dc2424f123b9023a2b\` (\`booking_id\`)`);
        await queryRunner.query(`ALTER TABLE \`tickets\` CHANGE \`booking_id\` \`booking_id\` int NULL`);
        await queryRunner.query(`ALTER TABLE \`bookings\` CHANGE \`user_id\` \`user_id\` int NULL`);
        await queryRunner.query(`ALTER TABLE \`bookings\` CHANGE \`flight_id\` \`flight_id\` int NULL`);
        await queryRunner.query(`ALTER TABLE \`flights\` CHANGE \`status\` \`status\` enum ('scheduled', 'delayed', 'cancelled', 'completed') NOT NULL DEFAULT 'scheduled'`);
        await queryRunner.query(`ALTER TABLE \`flights\` CHANGE \`airplane_id\` \`airplane_id\` int NULL`);
        await queryRunner.query(`ALTER TABLE \`flights\` CHANGE \`departure_airport_id\` \`departure_airport_id\` int NULL`);
        await queryRunner.query(`ALTER TABLE \`flights\` CHANGE \`arrival_airport_id\` \`arrival_airport_id\` int NULL`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`REL_e86edf76dc2424f123b9023a2b\` ON \`payments\` (\`booking_id\`)`);
        await queryRunner.query(`ALTER TABLE \`payments\` ADD CONSTRAINT \`FK_e86edf76dc2424f123b9023a2b2\` FOREIGN KEY (\`booking_id\`) REFERENCES \`bookings\`(\`booking_id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`tickets\` ADD CONSTRAINT \`FK_cc20985f14524969dddd128efd5\` FOREIGN KEY (\`booking_id\`) REFERENCES \`bookings\`(\`booking_id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`bookings\` ADD CONSTRAINT \`FK_64cd97487c5c42806458ab5520c\` FOREIGN KEY (\`user_id\`) REFERENCES \`users\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`bookings\` ADD CONSTRAINT \`FK_6136a19aecad762acef1a49b083\` FOREIGN KEY (\`flight_id\`) REFERENCES \`flights\`(\`flight_id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`flights\` ADD CONSTRAINT \`FK_10ec4f2cf1e23de40b1de9be5ec\` FOREIGN KEY (\`airplane_id\`) REFERENCES \`airplanes\`(\`airplane_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`flights\` ADD CONSTRAINT \`FK_7ce4f1631dfb4a6137bbb87654d\` FOREIGN KEY (\`departure_airport_id\`) REFERENCES \`airports\`(\`airport_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`flights\` ADD CONSTRAINT \`FK_699cbb1ea33186f51a3fb73bdd4\` FOREIGN KEY (\`arrival_airport_id\`) REFERENCES \`airports\`(\`airport_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE \`flights\` DROP FOREIGN KEY \`FK_699cbb1ea33186f51a3fb73bdd4\``);
        await queryRunner.query(`ALTER TABLE \`flights\` DROP FOREIGN KEY \`FK_7ce4f1631dfb4a6137bbb87654d\``);
        await queryRunner.query(`ALTER TABLE \`flights\` DROP FOREIGN KEY \`FK_10ec4f2cf1e23de40b1de9be5ec\``);
        await queryRunner.query(`ALTER TABLE \`bookings\` DROP FOREIGN KEY \`FK_6136a19aecad762acef1a49b083\``);
        await queryRunner.query(`ALTER TABLE \`bookings\` DROP FOREIGN KEY \`FK_64cd97487c5c42806458ab5520c\``);
        await queryRunner.query(`ALTER TABLE \`tickets\` DROP FOREIGN KEY \`FK_cc20985f14524969dddd128efd5\``);
        await queryRunner.query(`ALTER TABLE \`payments\` DROP FOREIGN KEY \`FK_e86edf76dc2424f123b9023a2b2\``);
        await queryRunner.query(`DROP INDEX \`REL_e86edf76dc2424f123b9023a2b\` ON \`payments\``);
        await queryRunner.query(`ALTER TABLE \`flights\` CHANGE \`arrival_airport_id\` \`arrival_airport_id\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`flights\` CHANGE \`departure_airport_id\` \`departure_airport_id\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`flights\` CHANGE \`airplane_id\` \`airplane_id\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`flights\` CHANGE \`status\` \`status\` enum ('scheduled', 'delayed', 'cancelled', 'completed') NULL DEFAULT ''scheduled''`);
        await queryRunner.query(`ALTER TABLE \`bookings\` CHANGE \`flight_id\` \`flight_id\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`bookings\` CHANGE \`user_id\` \`user_id\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`tickets\` CHANGE \`booking_id\` \`booking_id\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`payments\` DROP INDEX \`IDX_e86edf76dc2424f123b9023a2b\``);
        await queryRunner.query(`ALTER TABLE \`payments\` CHANGE \`booking_id\` \`booking_id\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`payments\` DROP COLUMN \`payment_method\``);
        await queryRunner.query(`ALTER TABLE \`payments\` ADD \`payment_method\` varchar(50) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`payments\` DROP COLUMN \`amount\``);
        await queryRunner.query(`ALTER TABLE \`payments\` ADD \`amount\` decimal(10,2) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`airports\` DROP COLUMN \`code\``);
        await queryRunner.query(`ALTER TABLE \`airports\` ADD \`code\` varchar(10) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`airports\` DROP COLUMN \`country\``);
        await queryRunner.query(`ALTER TABLE \`airports\` ADD \`country\` varchar(50) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`airports\` DROP COLUMN \`city\``);
        await queryRunner.query(`ALTER TABLE \`airports\` ADD \`city\` varchar(50) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`airports\` DROP COLUMN \`name\``);
        await queryRunner.query(`ALTER TABLE \`airports\` ADD \`name\` varchar(100) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`airplanes\` DROP COLUMN \`manufacturer\``);
        await queryRunner.query(`ALTER TABLE \`airplanes\` ADD \`manufacturer\` varchar(50) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`airplanes\` DROP COLUMN \`capacity\``);
        await queryRunner.query(`ALTER TABLE \`airplanes\` ADD \`capacity\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`airplanes\` DROP COLUMN \`model\``);
        await queryRunner.query(`ALTER TABLE \`airplanes\` ADD \`model\` varchar(50) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`tickets\` DROP COLUMN \`issuedAt\``);
        await queryRunner.query(`ALTER TABLE \`tickets\` DROP COLUMN \`ticketId\``);
        await queryRunner.query(`ALTER TABLE \`payments\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`payments\` DROP COLUMN \`payment_id\``);
        await queryRunner.query(`ALTER TABLE \`bookings\` ADD \`booking_date\` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP()`);
        await queryRunner.query(`ALTER TABLE \`bookings\` ADD \`booking_status\` enum ('pending', 'confirmed', 'cancelled') NULL DEFAULT ''pending''`);
        await queryRunner.query(`ALTER TABLE \`tickets\` ADD \`issued_at\` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP()`);
        await queryRunner.query(`ALTER TABLE \`tickets\` ADD \`ticket_number\` varchar(100) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`tickets\` ADD \`id\` int NOT NULL AUTO_INCREMENT`);
        await queryRunner.query(`ALTER TABLE \`tickets\` ADD PRIMARY KEY (\`id\`)`);
        await queryRunner.query(`ALTER TABLE \`tickets\` CHANGE \`id\` \`id\` int NOT NULL AUTO_INCREMENT`);
        await queryRunner.query(`ALTER TABLE \`payments\` ADD \`created_at\` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP()`);
        await queryRunner.query(`ALTER TABLE \`payments\` ADD \`status\` enum ('pending', 'paid', 'failed', 'refunded') NULL DEFAULT ''pending''`);
        await queryRunner.query(`ALTER TABLE \`payments\` ADD \`id\` int NOT NULL AUTO_INCREMENT`);
        await queryRunner.query(`ALTER TABLE \`payments\` ADD PRIMARY KEY (\`id\`)`);
        await queryRunner.query(`ALTER TABLE \`payments\` CHANGE \`id\` \`id\` int NOT NULL AUTO_INCREMENT`);
        await queryRunner.query(`CREATE INDEX \`airplane_id\` ON \`flights\` (\`airplane_id\`)`);
        await queryRunner.query(`CREATE INDEX \`departure_airport_id\` ON \`flights\` (\`departure_airport_id\`)`);
        await queryRunner.query(`CREATE INDEX \`arrival_airport_id\` ON \`flights\` (\`arrival_airport_id\`)`);
        await queryRunner.query(`CREATE INDEX \`user_id\` ON \`bookings\` (\`user_id\`)`);
        await queryRunner.query(`CREATE INDEX \`flight_id\` ON \`bookings\` (\`flight_id\`)`);
        await queryRunner.query(`CREATE INDEX \`booking_id\` ON \`tickets\` (\`booking_id\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`IDX_8d7b9a157280caf57aa0282e72\` ON \`tickets\` (\`ticket_number\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`ticket_number\` ON \`tickets\` (\`ticket_number\`)`);
        await queryRunner.query(`CREATE INDEX \`booking_id\` ON \`payments\` (\`booking_id\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`IDX_06be6c7681ff18455fd7fd7c45\` ON \`airports\` (\`code\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`code\` ON \`airports\` (\`code\`)`);
        await queryRunner.query(`ALTER TABLE \`flights\` ADD CONSTRAINT \`FK_7ce4f1631dfb4a6137bbb87654d\` FOREIGN KEY (\`departure_airport_id\`) REFERENCES \`airports\`(\`airport_id\`) ON DELETE RESTRICT ON UPDATE RESTRICT`);
        await queryRunner.query(`ALTER TABLE \`flights\` ADD CONSTRAINT \`FK_699cbb1ea33186f51a3fb73bdd4\` FOREIGN KEY (\`arrival_airport_id\`) REFERENCES \`airports\`(\`airport_id\`) ON DELETE RESTRICT ON UPDATE RESTRICT`);
        await queryRunner.query(`ALTER TABLE \`flights\` ADD CONSTRAINT \`FK_10ec4f2cf1e23de40b1de9be5ec\` FOREIGN KEY (\`airplane_id\`) REFERENCES \`airplanes\`(\`airplane_id\`) ON DELETE RESTRICT ON UPDATE RESTRICT`);
        await queryRunner.query(`ALTER TABLE \`bookings\` ADD CONSTRAINT \`FK_64cd97487c5c42806458ab5520c\` FOREIGN KEY (\`user_id\`) REFERENCES \`users\`(\`user_id\`) ON DELETE RESTRICT ON UPDATE RESTRICT`);
        await queryRunner.query(`ALTER TABLE \`bookings\` ADD CONSTRAINT \`FK_6136a19aecad762acef1a49b083\` FOREIGN KEY (\`flight_id\`) REFERENCES \`flights\`(\`flight_id\`) ON DELETE RESTRICT ON UPDATE RESTRICT`);
        await queryRunner.query(`ALTER TABLE \`tickets\` ADD CONSTRAINT \`FK_cc20985f14524969dddd128efd5\` FOREIGN KEY (\`booking_id\`) REFERENCES \`bookings\`(\`booking_id\`) ON DELETE RESTRICT ON UPDATE RESTRICT`);
        await queryRunner.query(`ALTER TABLE \`payments\` ADD CONSTRAINT \`FK_e86edf76dc2424f123b9023a2b2\` FOREIGN KEY (\`booking_id\`) REFERENCES \`bookings\`(\`booking_id\`) ON DELETE RESTRICT ON UPDATE RESTRICT`);
    }

}
